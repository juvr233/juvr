import mongoose, { Document, Schema } from 'mongoose';

export interface ISharedPost extends Document {
  user: mongoose.Schema.Types.ObjectId;
  divinationType: 'Numerology' | 'Tarot' | 'IChing';
  title: string;
  content: Record<string, any>; // Can store complex reading results
  summary: string; // A short summary generated by user or AI
  likes: mongoose.Schema.Types.ObjectId[];
  comments: mongoose.Schema.Types.ObjectId[];
  createdAt: Date;
}

const SharedPostSchema: Schema = new Schema({
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
  },
  divinationType: {
    type: String,
    enum: ['Numerology', 'Tarot', 'IChing'],
    required: true,
  },
  title: {
    type: String,
    required: true,
    trim: true,
    maxlength: 100,
  },
  content: {
    type: Schema.Types.Mixed,
    required: true,
  },
  summary: {
    type: String,
    required: false,
    trim: true,
    maxlength: 500,
  },
  likes: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
  }],
  comments: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Comment',
  }],
}, {
  timestamps: true,
});

const SharedPost = mongoose.model<ISharedPost>('SharedPost', SharedPostSchema);

export default SharedPost;
